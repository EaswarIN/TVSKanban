<!DOCTYPE html>
<html>
  <head>
    <title>Tvsmantra</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %> 
    <%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %> 
 <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %> 

    
    <style type="text/css">
      table {
        font-size: .8rem; 
      }
      .bg-dark {
        background-image: linear-gradient(to left, #1638aa, #005cc0, #007aca, #0096cb, #2bafca); 
      }
    .btn-group-xs>.btn, .btn-xs { 
    line-height: 0.8; 
    }
    .easy-autocomplete-container{
  width: 300px;position: fixed;
    left: auto;
}
.trtList{cursor: pointer;}
.w135{width: 135px;}
.form-control-sm { 
    padding: 0.25rem; 
}
.table th, .table td {
    padding: 0.5rem !important;
    }
    .w40{width: 40px;}
    .w60{width: 60px;}
    .w80{width: 80px;}
    .w120{width: 120px;}

    .alert-bottom{
    position: fixed;
    bottom: 5px;
    left:2%;
    width: 96%;
}

    </style>
  </head>

  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm p-3 mb-4">
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo03" aria-controls="navbarTogglerDemo03" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <a class="navbar-brand" href="#">TVS</a>

  <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
    <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
      <li class="nav-item ">
        <a class="nav-link" href="<%= trn_prod_plan_masters_path %>">Production Plan</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="<%= trn_prod_plan_headers_path %>">Production Schedule</a>
      </li>
    </ul> 
  </div>
</nav> 
<%= yield %>

<% flash.each do |name, msg| %> 
  <div class="alert-bottom alert alert-<%= name %>" id="custom-alert-msg">
    <button type="button" class="close" data-dismiss="alert">x</button>
     <%= msg %> 
  </div>
<% end %>

  </body>
  <script type="text/javascript">
    $(document).on("keydown paste", ".readonly", function(e) {  
    var code = e.keyCode || e.which;
    if (code != 9) { 
        e.preventDefault();}
    });

    $(document).on("keydown paste", ".auto-form-control", function(e) { 
    var code = e.keyCode || e.which;  
    if(code != 9 && code != 13 && code != 37 && code != 38 && code != 39 && code != 40) {
      $("#sfgCode").val('');
      $("#sfgDesc").val('');
    } 
        
    });

    $("#custom-alert-msg").fadeTo(5000, 500).slideUp(500, function() {
      $("#custom-alert-msg").slideUp(500);
    });
      
    $(".readonly").on('keydown paste', function(e){
        e.preventDefault();
    });
    $(".removeRow").on("click", function() {
      $('#newrow').remove();
      $('#master_new').remove();
    });

    function trtAutocomplete() {
      $.ajax({
        url: "trt_list",
        dataType: 'json',
        type: "GET",
        success: function(result) {
          var options = {
            data: result,
            getValue: "trt_code",
            template: {
              type: "custom",
              method: function(value, item) {
                return value + " - " + item.mat_code + " - " + item.mat_desc;
              }
            },
            list: {
              match: {
                enabled: true
              },
              onChooseEvent: function() {
                var value = $(".auto-form-control").getSelectedItemData().mat_code;
                $("#sfgCode").val(value).trigger("change");
                value = $(".auto-form-control").getSelectedItemData().mat_desc;
                $("#sfgDesc").val(value).trigger("change");

                $("input#sfgCode").attr("onblur", "setCustomValidity('')");
                $("input#sfgCode").attr("oninput", "setCustomValidity('')"); 
                // $("input#sfgDesc").attr("onblur", "setCustomValidity('')");
                // $("input#sfgDesc").attr("oninput", "setCustomValidity('')"); 
              },
              onHideListEvent: function() {
                var value = $(".auto-form-control").val().length;
                if (value < 3) {
                  $("#sfgCode").val("").trigger("change");
                  $("#sfgDesc").val("").trigger("change"); 
                }
              }
            },
            theme: "plate-dark"
          };
          $(".auto-form-control").easyAutocomplete(options);
        }
      });
    }

    function poAutocomplete() {
      $.ajax({
        url: "po_list",
        dataType: 'json',
        type: "GET",
        success: function(result) {}
      });
    }

    function setAttributes(el, attrs) {
      for (var key in attrs) {
        el.setAttribute(key, attrs[key]);
      }
    }

    var inputQuantity = [];
    $(".input_number").each(function(i) {
      inputQuantity[i] = this.defaultValue;
      $(this).data("idx", i); // save this field's index to access later
    });

    $(document).on('keyup', ".input_number", function(e) {
      var $field = $(this),
        val = this.value,
        $thisIndex = parseInt($field.data("idx"), 10); // retrieve the index
      //        window.console && console.log($field.is(":invalid"));
      //  $field.is(":invalid") is for Safari, it must be the last to not error in IE8
      if (this.validity && this.validity.badInput || isNaN(val) || $field.is(":invalid")) {
        this.value = inputQuantity[$thisIndex];
        return;
      }
      if (val.length > Number($field.attr("maxlength"))) {
        val = val.slice(0, Number($field.attr("maxlength")));
        $field.val(val);
      }
      inputQuantity[$thisIndex] = val;
    });
  </script>
</html>
